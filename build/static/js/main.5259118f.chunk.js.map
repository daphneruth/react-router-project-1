{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/UI/LoadingSpinner.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","QuoteList","list","quotes","map","quote","id","DUMMY_QUOTES","AllQuote","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","HighlightedQuote","QuoteDetails","params","useParams","find","quoteId","path","MainNavigation","header","logo","nav","to","activeClassName","active","Layout","main","children","LoadingSpinner","spinner","Card","card","QuoteForm","authorInputRef","textInputRef","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","type","NewQuote","quoteData","console","log","App","fallback","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5259118f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      < Link className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  return (\n    <Fragment>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from '../components/quotes/QuoteList';\nconst DUMMY_QUOTES = [\n    {\n        id:'q1',\n        author:'ME',\n        text:'react is fun'\n    },\n    {\n        id:'q1',\n        author:'you',\n        text:'react is great'\n    },\n]\nconst AllQuote = ()=>{\n    return(\n    <QuoteList quotes= {DUMMY_QUOTES}/>\n    )\n}\nexport default AllQuote;","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","    \n    import { Fragment } from \"react\";\n    import { useParams } from \"react-router-dom\";\n    import Comments from '../components/comments/Comments';\n    import { Route } from \"react-router-dom\";\n    import HighlightedQuote from '../components/quotes/HighlightedQuote'\n\n    const DUMMY_QUOTES = [\n        {\n            id:'q1',\n            author:'ME',\n            text:'react is fun'\n        },\n        {\n            id:'q1',\n            author:'you',\n            text:'react is great'\n        },\n    ]\n    const QuoteDetails = ()=>{\n        const params = useParams();\n\n        const quote = DUMMY_QUOTES.find((quote)=> quote.id===params.quoteId)\n\n        if (!quote){\n            return <p>No found Quote</p>\n        }\n\n       return <Fragment>\n       \n       <HighlightedQuote text={quote.text} author={quote.author}/>\n       <Route path ='quotes/:quoteId/Comments'>\n        <Comments/>\n       </Route>\n       </Fragment>\n    }\n    export default QuoteDetails;","import { NavLink } from \"react-router-dom\";\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = ()=>{\nreturn (\n<header  className={classes.header}>\n    <div className={classes.logo}>\n        <nav className={classes.nav}>\n            <ul>\n                <li>\n                 <NavLink to ='/quotes' activeClassName={classes.active}>\n                    AllQuotes\n                 </NavLink>\n                </li>\n                <li>\n                 <NavLink to ='/new-quotes' activeClassName={classes.active}>\n                    Add a quote\n                 </NavLink>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</header>\n)\n\n}\nexport default MainNavigation;","import { Fragment } from \"react\";\n\nimport classes from './Layout.module.css';\nimport MainNavigation from \"./MainNavigation\";\nconst Layout =(props)=>{\n    return(\n    <Fragment>\n        <MainNavigation/>\n        <main className={classes.main}>\n         {props.children}\n        </main>\n    </Fragment>\n    )\n\n}\nexport default Layout","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from 'react';\n\nimport Card from '../UI/Card'\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","    import QuoteForm from '../components/quotes/QuoteForm';\n    const NewQuote = ()=>{\n        const addQuoteHandler = quoteData =>\n        {console.log(quoteData)\n        }\n    \n        return(\n        <QuoteForm onAddQuote={addQuoteHandler}/>\n        )\n    }\n\n    export default NewQuote;","   import React, { Suspense } from 'react';\n   import {Route,Switch ,Redirect} from 'react-router-dom';\n   import AllQuote from './pages/AllQuotes';\n   import QuoteDetails from './pages/QuoteDetails';\n   import Layout from './components/layout/Layout';\n   import LoadingSpinner from './components/UI/LoadingSpinner'\n   import NewQuote from './pages/NewQuote';\n\n  \n\n   function App() {\n      return (\n        <Layout>\n          <Suspense\n          fallback='centered'>\n            <LoadingSpinner/>\n        <Switch>\n          <Route path ='/' >\n            <Redirect to ='/quotes'/>\n          </Route>\n          <Route path='/quotes' exact>\n          <AllQuote/>\n          </Route>\n\n          <Route path = '/quotes/:quoteId'>\n            <QuoteDetails/>\n\n          </Route>\n\n          <Route path=' /new-quote'>\n            <NewQuote/>\n\n          </Route>\n\n        </Switch>\n        </Suspense>\n        </Layout>\n      );\n    }\n\n    export default App;\n","import { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom/client';\n\n        import './index.css';\n        import App from './App';\n\n        const root = ReactDOM.createRoot(document.getElementById('root'));\n        root.render(\n            <BrowserRouter>\n            <App />\n            </BrowserRouter>\n        )\n"],"sourceRoot":""}