{"ast":null,"code":"var _jsxFileName = \"/home/daphne/projects/sec14/src/App.js\",\n    _s = $RefreshSig$();\n\n//const { useState } = require(\"react\");\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function getMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_data\n        };\n      });\n      setMovies(transformedData);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoadingfa;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isloading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this), isloading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this), !isloading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"p+V4ZeR7H5E/XWH2s8Wk10TlCbM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isloading","setIsLoading","error","setError","getMoviesHandler","response","fetch","data","json","ok","Error","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_data","message","setIsLoadingfa"],"sources":["/home/daphne/projects/sec14/src/App.js"],"sourcesContent":["//const { useState } = require(\"react\");\n\nimport React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  const[movies, setMovies] = useState([])\n  const[isloading, setIsLoading] = useState(false);\n  const[error, setError] = useState(null);\n  \n\n\n async function getMoviesHandler() {\n    \n    \n  setIsLoading(true);\n  setError(null);\n  try{\n   const response= await fetch('https://swapi.dev/api/films/');\n    const data = await  response.json();\n   \n    if(!response.ok){\n      throw new Error('Something went wrong');\n    }\n      const transformedData =data.results.map((movieData)=>{\n      \n        return{\n          id:movieData.episode_id,\n          title:movieData.title,\n          openingText:movieData.opening_crawl,\n          releaseDate:movieData.release_data,\n        }\n      });\n    setMovies(transformedData);\n    setIsLoading(false);\n  \n}catch(error){\nsetError(error.message)\n}\nsetIsLoadingfa\n  } \n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={getMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isloading && <MoviesList movies={movies} />}\n        {isloading && <p>Loading...</p>}\n        {!isloading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAK,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAAnC;EACA,MAAK,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAK,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAjC;;EAID,eAAeS,gBAAf,GAAkC;IAGjCH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAG;MACF,MAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAAD,CAA3B;MACC,MAAMC,IAAI,GAAG,MAAOF,QAAQ,CAACG,IAAT,EAApB;;MAEA,IAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;QACd,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACC,MAAMC,eAAe,GAAEJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAa;QAEnD,OAAM;UACJC,EAAE,EAACD,SAAS,CAACE,UADT;UAEJC,KAAK,EAACH,SAAS,CAACG,KAFZ;UAGJC,WAAW,EAACJ,SAAS,CAACK,aAHlB;UAIJC,WAAW,EAACN,SAAS,CAACO;QAJlB,CAAN;MAMD,CARsB,CAAvB;MASFtB,SAAS,CAACY,eAAD,CAAT;MACAV,YAAY,CAAC,KAAD,CAAZ;IAEH,CAnBC,CAmBD,OAAMC,KAAN,EAAY;MACbC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACC;;IACDC,cAAc;EACX;;EACD,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAA,uBACE;QAAQ,OAAO,EAAEnB,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,WACG,CAACJ,SAAD,iBAAc,QAAC,UAAD;QAAY,MAAM,EAAEF;MAApB;QAAA;QAAA;QAAA;MAAA,QADjB,EAEGE,SAAS,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFhB,EAGG,CAACA,SAAD,IAAcE,KAAd,iBAAuB;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAH1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAjDQL,G;;KAAAA,G;AAmDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}