{"ast":null,"code":"var _jsxFileName = \"/home/daphne/projects/sec14/src/App.js\",\n    _s = $RefreshSig$();\n\n//const { useState } = require(\"react\");\nimport AddMovie from './components/AddMovie';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await response.json();\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_data\n        };\n      });\n      setMovies(transformedData);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  function addMovieHandler(movie) {\n    console.log(movie);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isloading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this), isloading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }, this), !isloading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n33iYi/3InPrjanUEXbqEhX4ZXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AddMovie","React","useState","useEffect","useCallback","MoviesList","App","movies","setMovies","isloading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_data","message","addMovieHandler","movie","console","log"],"sources":["/home/daphne/projects/sec14/src/App.js"],"sourcesContent":["//const { useState } = require(\"react\");\nimport AddMovie from './components/AddMovie';\nimport React,{useState, useEffect,useCallback} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  const[movies, setMovies] = useState([])\n  const[isloading, setIsLoading] = useState(false);\n  const[error, setError] = useState(null);\n  \n  \n const fetchMoviesHandler=useCallback(async() =>{\n    \n    \n  setIsLoading(true);\n  setError(null);\n  try{\n   const response= await fetch('https://swapi.dev/api/films/');\n\n      \n   if(!response.ok){\n    throw new Error('Something went wrong');\n  }\n    \n    const data = await  response.json();\nconst transformedData =data.results.map((movieData)=>{\n      \n        return{\n          id:movieData.episode_id,\n          title:movieData.title,\n          openingText:movieData.opening_crawl,\n          releaseDate:movieData.release_data,\n        }\n      })\n    setMovies(transformedData);\n    setIsLoading(false);\n  \n}catch(error){\nsetError(error.message)\n}\nsetIsLoading(false);\n  } ,[])\n\n  useEffect(()=>{\n    fetchMoviesHandler();\n  },[fetchMoviesHandler])\n  function addMovieHandler(movie) {\n    console.log(movie)\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie ={addMovieHandler}/>\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isloading && <MoviesList movies={movies} />}\n        {isloading && <p>Loading...</p>}\n        {!isloading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,EAAkCC,WAAlC,QAAoD,OAApD;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAK,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAAnC;EACA,MAAK,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAK,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAjC;EAGD,MAAMW,kBAAkB,GAACT,WAAW,CAAC,YAAU;IAG9CM,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAG;MACF,MAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAAD,CAA3B;;MAGA,IAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;QACf,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MAEC,MAAMC,IAAI,GAAG,MAAOJ,QAAQ,CAACK,IAAT,EAApB;MACJ,MAAMC,eAAe,GAAEF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAa;QAE7C,OAAM;UACJC,EAAE,EAACD,SAAS,CAACE,UADT;UAEJC,KAAK,EAACH,SAAS,CAACG,KAFZ;UAGJC,WAAW,EAACJ,SAAS,CAACK,aAHlB;UAIJC,WAAW,EAACN,SAAS,CAACO;QAJlB,CAAN;MAMD,CARgB,CAAvB;MASItB,SAAS,CAACY,eAAD,CAAT;MACAV,YAAY,CAAC,KAAD,CAAZ;IAEH,CArBC,CAqBD,OAAMC,KAAN,EAAY;MACbC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACC;;IACDrB,YAAY,CAAC,KAAD,CAAZ;EACG,CA9BkC,EA8BhC,EA9BgC,CAApC;EAgCCP,SAAS,CAAC,MAAI;IACZU,kBAAkB;EACnB,CAFQ,EAEP,CAACA,kBAAD,CAFO,CAAT;;EAGA,SAASmB,eAAT,CAAyBC,KAAzB,EAAgC;IAC9BC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;;EAED,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAA,uBACE,QAAC,QAAD;QAAU,UAAU,EAAGD;MAAvB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,uBACE;QAAQ,OAAO,EAAEnB,kBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAA,WACG,CAACJ,SAAD,iBAAc,QAAC,UAAD;QAAY,MAAM,EAAEF;MAApB;QAAA;QAAA;QAAA;MAAA,QADjB,EAEGE,SAAS,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFhB,EAGG,CAACA,SAAD,IAAcE,KAAd,iBAAuB;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAH1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA7DQL,G;;KAAAA,G;AA+DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}